TEXT	Â·BinarySearch+0(SB),$0

start:
	MOVL	arr+0(FP), CX
	MOVL	len1+4(FP), AX
	
	MOVL	AX, RET+12(FP)
	RET
    NOP
	
	JMP		find_index
	NOP

find_index:
	XORL	DX, DX
	MOVL	$2, BX
	IDIVL	BX
	JMP		comp

comp:
	LEAL	(AX * 4), BX
	ADDL	BX, CX
	MOVL	num+8(FP), DX
	CMPL	DX, (CX)
	JE		found
	JG		right
	JL		left
	JMP		not_found

left:
	CMPL	len1+4(FP), $1
	JE		not_found
	MOVL	AX, len1+4(FP)
	JMP 	start

right:
	CMPL	len1+4(FP), $1
	JE		not_found
	MOVL	CX, arr+0(FP)
	JMP 	start

not_found:
	MOVL	$0, RET+12(FP)
	RET
    NOP
	
found:
	MOVL	$1, RET+12(FP)
	RET
	NOP